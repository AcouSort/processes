expose list<well> sample(well = "A1", volume = 80, velocity = 60)
well buffer(well = "B1", volume! = 40, velocity = 60)
well output(well = "C1", volume = 200, velocity = 500)
expose int wash_volume = 150
expose int wash_velocity = 60
int frequency = 4150
expose int voltage = 10

########## INITIALIZE #########

int steps = 0
int diff = 0
int time = 442
for_each(s in sample)
	time = time + (s.volume*60)/(s.velocity)
end
time = time + wash_volume*60/wash_velocity
set("required_time", time)


int i = 0
for_each(s in sample)
    if(i < 1)
        ############ ASPIRATING SAMPLE WELL #############
		set_status("Moving to sample well...")
		set_valve("buffer")
		us("track3", frequency, voltage)
		parallel
			goto(s.well)
			aspirate(50, 3000)
		endparallel
		set_light(255, 255, 255, 1)
		set_status("Aspirating cells...")
		set_valve("chip")
		aspirate_from("chip", s.volume, s.velocity)
	else
		############# ASPIRATING ADDITIONAL SAMPLE WELLS ################
		diff = s.velocity - 50
		steps = diff/25
		set_valve("waste")
		set_status("Moving to next sample well...")
		parallel
			empty(7500)
			goto(s.well)
		endparallel
		aspirate_from("buffer", 50, 3000)
		set_status("Aspirating cells...")
		set_valve("chip")
		if(s.velocity>50)
			aramp(s.volume, 50, s.velocity, steps, 1, steps, "lin")
		else
			aspirate(s.volume, s.velocity)
		end
	end
	i = i + 1
end

############### ASPIRATING BUFFER #################

diff = buffer.velocity - 20
steps = diff/10
set_status("Moving to buffer well...")
set_valve("waste")
parallel
	empty(7500)
	goto(buffer.well)
endparallel
aspirate_from("buffer", 50, 3000)
set_status("Aspirating buffer...")
set_valve("chip")
if(buffer.velocity>20)
	aramp(buffer.volume, 20, buffer.velocity, steps, 1, steps, "lin")
else
	aspirate(buffer.volume, buffer.velocity)
endif
snapshot(experiment_name + "_sample")

############# SYRINGE WASH ################

set_status("Cleaning syringe...")
aspirate_from("buffer", 1000, 3000)
empty_to("waste", 7500)
aspirate_from("buffer", 500, 3000)
empty_to("waste", 7500)

############### WASHING ##################

int diff = wash_velocity - 20
int steps = diff/10 + 1
set_status("Moving to waste...")
set_valve("buffer")
parallel
	aspirate(wash_volume + 50, 3000)
	goto("waste")
endparallel
set_status("Washing cells...")
dispense_to("waste", 20, 5000)
set_valve("chip")
if(wash_velocity>20)
	dramp(wash_volume, 20, wash_velocity, steps, 1, steps, "lin")
else
	dispense(wash_volume, wash_velocity)
end
snapshot(experiment_name + "_washed_sample")

############# DISPENSING SAMPLE ###############

set_status("Moving to output well...")
set_valve("buffer")
parallel
	goto(output.well)
	aspirate(output.volume + 50, 3000)
endparallel
dispense_to("waste", 20, 5000)
us("constant", 0, 0)
set_status("Dispensing cells...")
dispense_to("chip", output.volume, output.velocity)
set_light(0, 255, 0, 1)
snapshot(experiment_name + "_after_dispense")
set_valve("waste")
parallel
	goto("home")
	empty(7500)
endparallel
set_status("Done!")
add_process_after("post_sample_clean_short_pure.acoul")
set_light(0)
