process_revision(1.2.0)
expose list<well> sample(well = "A1", volume = 100, velocity = 50)
well stain(well = "B1", volume = 20, velocity = 50)
well buffer(well = "C1", volume! = 60, velocity = 50)
well output(well = "D1", volume = 200, velocity = 2000)
expose int wash_volume = 200
expose int wash_velocity = 50
expose int stainwash_volume = 150
expose int stainwash_velocity = 50
int frequency = 4280
int seed_volume = 95
expose int voltage = 12
expose int staining_time = 3
int seedwash_volume = 150
int syringe_wash = 500
int seedwash_velocity = 300
expose int buffer_volume = 25

########## INITIALIZE #########

int steps = 0
int diff = 0

int time = 428
for_each(s in sample)
	time = time + (s.volume*60)/(s.velocity)
end
time = time + wash_volume*60/wash_velocity
time = time + staining_time
set("required_time", time)

########## SEED PARTICLE ASPIRATION ##########
set_status("Resuspending seed particles...")
stir("on")
wait(10)
stir("off")
us("track3", frequency, voltage)
empty_to("waste", 7500)
set_valve("buffer")
parallel
	goto("seed")
	aspirate(50, 3000)
endparallel
set_light(255, 255, 255, 1)
set_status("Aspirating seed particles...")
aspirate_from("chip", seed_volume, 200)
empty_to("waste", 7500)

########## SEED PARTICLE WASH ##########
diff = seedwash_velocity - 50
steps = diff/25
set_status("Moving to waste...")
set_valve("buffer")
parallel
	aspirate(50 + seedwash_volume, 3000)
	goto("waste")
endparallel
dispense_to("waste", 20, 5000)
set_status("Washing seed particles...")
set_valve("chip")
dramp(seedwash_volume, 50, seedwash_velocity, steps, 1, steps, "lin")
snapshot(experiment_name + "_seed_particles")

set_light(0)

int i = 0
for_each(s in sample)
    if(i < 1)
        ############ ASPIRATING SAMPLE WELL #############
		diff = s.velocity - 50
		steps = diff/25
		set_status("Moving to sample well...")
		goto(s.well)
		set_status("Aspirating sample...")
		set_valve("chip")
		if(s.velocity>50)
			aramp(s.volume, 50, s.velocity, steps, 60, steps, "lin")
		else
			aspirate(s.volume, s.velocity)
		end
	else
		############# ASPIRATING ADDITIONAL SAMPLE WELLS ################
		diff = s.velocity - 50
		steps = diff/25
		set_valve("waste")
		set_status("Moving to next sample well...")
		parallel
			empty(7500)
			goto(s.well)
		endparallel
		aspirate_from("buffer", 50, 3000)
		set_status("Aspirating sample...")
		set_valve("chip")
		if(s.velocity>50)
			aramp(s.volume, 50, s.velocity, steps, 1, steps, "lin")
		else
			aspirate(s.volume, s.velocity)
		end
	end
	i = i + 1
end

############### ASPIRATING BUFFER #################

diff = buffer.velocity - 50
steps = diff/25
set_status("Moving to buffer well...")
set_valve("waste")
parallel
	empty(7500)
	goto(buffer.well)
endparallel
aspirate_from("buffer", 50, 3000)
set_status("Aspirating buffer...")
set_valve("chip")
if(buffer.velocity>50)
	aramp(buffer.volume, 50, buffer.velocity, steps, 1, steps, "lin")
else
	aspirate(buffer.volume, buffer.velocity)
endif
snapshot(experiment_name + "_sample_aspiration")

############# SYRINGE WASH ################

set_status("Cleaning syringe...")
empty_to("waste", 7500)
aspirate_from("sl", syringe_wash, 4000)
empty_to("waste", 7500)
aspirate_from("sl", 1000, 4000)
empty_to("waste", 7500)
aspirate_from("rl", syringe_wash, 4000)
empty_to("waste", 7500)
aspirate_from("rl", 1000, 4000)
empty_to("waste", 7500)
aspirate_from("buffer", 1000, 3000)
empty_to("waste", 7500)
aspirate_from("buffer", 1000, 3000)
empty_to("waste", 7500)
aspirate_from("buffer", 1000, 3000)
empty_to("waste", 7500)

############### WASHING ##################

int diff = wash_velocity - 50
int steps = diff/25 + 1
set_status("Moving to waste...")
set_valve("buffer")
parallel
	aspirate(wash_volume + 50, 3000)
	goto("waste")
endparallel
dispense_to("waste", 20, 5000)
set_status("Washing EVs...")
set_valve("chip")
if(wash_velocity>50)
	dramp(wash_volume, 50, wash_velocity, steps, 1, steps, "lin")
else
	dispense(wash_volume, wash_velocity)
end
snapshot(experiment_name + "_washed_sample")

############# ASPIRATING STAIN ###############
set_status("Moving to stain well...")
set_valve("buffer")
parallel
	aspirate(50, 3000)
	goto(stain.well)
endparallel
set_status("Aspirating stain...")
aspirate_from("chip", stain.volume, stain.velocity)
set_status("Moving to buffer well...")
goto(buffer.well)
aspirate_from("chip", buffer_volume, stain.velocity)

repeat(staining_time)
	dispense_to("chip", 10, 20)
	aspirate_from("chip", 10, 20)
endrepeat

############### STAIN WASH ##################

int diff = stainwash_velocity - 50
int steps = diff/25 + 1
set_status("Moving to waste...")
set_valve("buffer")
parallel
	aspirate(stainwash_volume + 50, 3000)
	goto("waste")
endparallel
dispense_to("waste", 20, 5000)
set_status("Washing EVs...")
set_valve("chip")
if(wash_velocity>50)
	dramp(stainwash_volume, 50, stainwash_velocity, steps, 1, steps, "lin")
else
	dispense(stainwash_volume, stainwash_velocity)
end
snapshot(experiment_name + "_stained_sample")

############# DISPENSING SAMPLE ###############

set_status("Moving to output well...")
set_valve("buffer")
parallel
	goto(output.well)
	aspirate(output.volume + 20, 3000)
endparallel
us("constant", 0, 0)
set_status("Dispensing sample...")
dispense_to("waste", 20, 5000)
dispense_to("chip", output.volume, output.velocity)
set_light(0, 255, 0, 1)
snapshot(experiment_name + "_after_dispense")
set_valve("waste")
parallel
	empty(7500)
	goto("home")
endparallel
set_status("Done!")
add_process_after("post_sample_clean_pure.acoul")
set_light(0)
