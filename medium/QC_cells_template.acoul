well sample(well = "A1", volume = 400, velocity! = 200)
well buffer(well = "B1", volume! = 60, velocity! = 200)
well output(well = "C1", volume! = 200, velocity! = 2000)

###### INITIALIZING #####
int diff = 0
int steps = 0

int wash_volume = 200
int wash_velocity = 200
int frequency = 4280
expose int voltage = 12
expose bool flush = true
int time = 0
set_light(255, 255, 255, 1)
if(flush)
	time = 461 
else
	time = 421
end
set("required_time", time)

####### CLEANING ########

if(flush)
	########### PRIMING ############
	show_message("Please fill well H12 with 70% Ethanol and press OK")
	set_status("Moving to well...")
	set_valve("waste")
	parallel
		empty(7500)
		goto("h12")
	endparallel
	aspirate_from("sl", 50, 3000)
	set_status("Aspirating ethanol...")
	aspirate_from("chip", 250, 400)

	set_status("Moving to waste...")
	set_valve("waste")
	parallel
		empty(7500)
		goto("waste")
	endparallel
	set_status("Priming...")
	aspirate_from("buffer", 200, 3000)
	empty_to("waste", 7500)
	aspirate_from("buffer", 1000, 3000)
	dispense_to("chip", 200, 3000)
	empty_to("waste", 7500)
	aspirate_from("buffer", 1000, 3000)
	dispense_to("chip", 200, 3000)
	empty_to("waste", 7500)
	aspirate_from("buffer", 1000, 3000)
	dispense_to("chip", 200, 3000)
	us("track3", frequency, voltage)
	empty_to("waste", 7500)
else
	###### QUICK RINSE ######
	empty_to("waste", 7500)
	set_valve("buffer")
	parallel
		goto("waste")
		aspirate(1000, 3000)
	endparallel
	dispense_to("chip", 200, 3000)
	empty_to("waste", 7500)
	aspirate_from("buffer", 1000, 3000)
	dispense_to("chip", 200, 3000)
	us("track3", frequency, voltage)
	empty_to("waste", 7500)
end

############ ASPIRATING SAMPLE WELL #############

set_status("Moving to sample well...")
set_valve("buffer")
parallel
	goto(sample.well)
	aspirate(50, 3000)
endparallel
set_status("Aspirating sample...")
aspirate_from("chip", sample.volume, sample.velocity)

############### ASPIRATING BUFFER #################

diff = buffer.velocity - 50
steps = diff/25
set_status("Moving to buffer well...")
set_valve("waste")
parallel
	empty(7500)
	goto(buffer.well)
endparallel
aspirate_from("buffer", 50, 3000)
set_status("Aspirating buffer...")
set_valve("chip")
if(buffer.velocity>50)
	aramp(buffer.volume, 50, buffer.velocity, steps, 1, steps, "lin")
else
	aspirate(buffer.volume, buffer.velocity)
endif
snapshot(experiment_name + "_cells")

############# SYRINGE WASH ################

set_status("Cleaning syringe...")
empty_to("waste", 7500)
aspirate_from("buffer", 500, 3000)
empty_to("waste", 7500)
aspirate_from("buffer", 300, 3000)
empty_to("waste", 7500)

############### WASHING ##################

int diff = wash_velocity - 50
int steps = diff/25 + 1
set_status("Moving to waste cup...")
set_valve("buffer")
parallel
	aspirate(wash_volume + 50, 3000)
	goto("waste")
endparallel
set_status("Washing cells...")
set_valve("chip")
if(wash_velocity>50)
	dramp(wash_volume, 50, wash_velocity, steps, 1, steps, "lin")
else
	dispense(wash_volume, wash_velocity)
end
snapshot(experiment_name + "_washed_cells")

############# DISPENSING SAMPLE ###############

set_status("Moving to output well...")
set_valve("buffer")
parallel
	goto(output.well)
	aspirate(output.volume, 3000)
endparallel
us("constant", 0, 0)
set_status("Dispensing sample...")
dispense_to("chip", output.volume, output.velocity)
snapshot(experiment_name + "_dispensed")
set_light(0, 255, 0, 1)
set_status("Finishing...")
set_valve("waste")
parallel
	goto("home")
	empty(7500)
endparallel
set_status("Done!")
set_light(0)